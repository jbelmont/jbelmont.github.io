<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on Software Musings</title>
    <link>https://jbelmont.github.io/tags/security/</link>
    <description>Recent content in Security on Software Musings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Jean-Marcel Belmont</copyright>
    <lastBuildDate>Fri, 18 Aug 2017 12:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/security/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>OWASP and Software Security</title>
      <link>https://jbelmont.github.io/post/software-security/</link>
      <pubDate>Fri, 18 Aug 2017 12:00:00 +0000</pubDate>
      
      <guid>https://jbelmont.github.io/post/software-security/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#software-security&#34;&gt;Software Security&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#difference-between-software-security-and-application-security&#34;&gt;Difference between Software Security and Application Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#language-based-security&#34;&gt;Language-Based Security&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#objectives-of-language-based-security&#34;&gt;Objectives of Language Based Security&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#application-level-security&#34;&gt;Application Level Security&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#definition&#34;&gt;Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#terms&#34;&gt;Terms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#techniques&#34;&gt;Techniques&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#application-threats-or-attacks&#34;&gt;Application threats or attacks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp&#34;&gt;OWASP&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#background-on-owasp&#34;&gt;Background on OWASP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-core-values&#34;&gt;OWASP Core Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-principles&#34;&gt;OWASP Principles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-mailing-lists&#34;&gt;OWASP Mailing Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-chapter&#34;&gt;OWASP Chapter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-membership&#34;&gt;OWASP Membership&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-projects&#34;&gt;OWASP Projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-github-organization&#34;&gt;OWASP Github Organization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-member-portal&#34;&gt;OWASP Member Portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-top-10&#34;&gt;OWASP Top 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#owasp-top-10-comparison-table-for-2013-vs-2017&#34;&gt;OWASP Top 10 comparsion table for 2013 vs 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#github-repository&#34;&gt;Github Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;software-security&#34;&gt;Software Security&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Software security entails software that continues to function correctly under malicious attack.&lt;/li&gt;
&lt;li&gt;Most engineers acknowledge that security is important but don&amp;rsquo;t know the steps to tackle security&lt;/li&gt;
&lt;li&gt;Software security best practices leverage good software engineering practice

&lt;ul&gt;
&lt;li&gt;Involve thinking about security early in the software lifecycle, knowing and understanding common threats&lt;/li&gt;
&lt;li&gt;Including language-based flaws and pitfalls&lt;/li&gt;
&lt;li&gt;designing for security&lt;/li&gt;
&lt;li&gt;Putting all software components thorough objective risk analyses and testing.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;difference-between-software-security-and-application-security&#34;&gt;Difference between Software Security and Application Security&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.garymcgraw.com/&#34; target=&#34;_blank&#34;&gt;Gary McGraw&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gary McGraw maintains that application security is a reactive approach, taking place once software has been deployed. Software security, on the other hand, involves a proactive approach, taking place within the pre-deployment phase.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://www.synopsys.com/blogs/software-security/application-security-vs-software-security/&#34; target=&#34;_blank&#34;&gt;Difference between Software Security and Application Security&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Software security (pre-deployment) activities include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Secure software design&lt;/li&gt;
&lt;li&gt;Development of secure coding guidelines for developers to follow&lt;/li&gt;
&lt;li&gt;Development of secure configuration procedures and standards for the deployment phase&lt;/li&gt;
&lt;li&gt;Secure coding that follows established guidelines&lt;/li&gt;
&lt;li&gt;Validation of user input and implementation of a suitable encoding strategy&lt;/li&gt;
&lt;li&gt;User authentication&lt;/li&gt;
&lt;li&gt;User session management&lt;/li&gt;
&lt;li&gt;Function level access control&lt;/li&gt;
&lt;li&gt;Use of strong cryptography to secure data at rest and in transit&lt;/li&gt;
&lt;li&gt;Validation of third-party components&lt;/li&gt;
&lt;li&gt;Arrest of any flaws in software design/architecture&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Application security (post-deployment) activities include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Post deployment security tests&lt;/li&gt;
&lt;li&gt;Capture of flaws in software environment configuration&lt;/li&gt;
&lt;li&gt;Malicious code detection (implemented by the developer to create backdoor, time bomb)&lt;/li&gt;
&lt;li&gt;Patch/upgrade

&lt;ul&gt;
&lt;li&gt;Meaning that situations like third party software or dependencies needing to be patched&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;IP filtering

&lt;ul&gt;
&lt;li&gt;White List Known Good IP addresses instead of leaving a bunch IP addresses open&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Lock down executables

&lt;ul&gt;
&lt;li&gt;This in my mind goes more hand in hand with compiled languages but I could be wrong&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Monitoring of programs at runtime to enforce the software use policy&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;language-based-security&#34;&gt;Language-Based Security&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Language-based_security&#34; target=&#34;_blank&#34;&gt;Language Based Security&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Language-based security (LBS) is a set of techniques that may be used to strengthen the security of applications on a high level by using the properties of programming languages. LBS is considered to enforce computer security on an application-level, making it possible to prevent vulnerabilities which traditional operating system security is unable to handle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;objectives-of-language-based-security&#34;&gt;Objectives of Language Based Security&lt;/h3&gt;

&lt;p&gt;Objective of Language-based security:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Prevent common programming errors such as allowing buffer overflows and illegal information flows to occur&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Provide some proof to the consumer about the security properties of the software&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Helps the consumer trust the software without having to check source code for errors.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A compiler, taking source code as input, performs several language specific operations on the code&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lexical analysis, preprocessing, parsing, semantic analysis, code generation, and code optimization&lt;/li&gt;
&lt;li&gt;By analyzing the source code and gathering best practices for the language&lt;/li&gt;
&lt;li&gt;The compiler will attempt to correctly translate the high-level code into low-level code

&lt;ul&gt;
&lt;li&gt;Preserving the behavior of the program.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;For Dynamic Libraries such as Javasript/Node.js you can use tools such as eslint that help with static analysis and best practices that you should follow&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;application-level-security&#34;&gt;Application Level Security&lt;/h2&gt;

&lt;h3 id=&#34;definition&#34;&gt;Definition&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Encompasses measures taken to improve the security of an application

&lt;ul&gt;
&lt;li&gt;By finding, fixing and preventing security vulnerabilities.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;terms&#34;&gt;Terms&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Asset

&lt;ul&gt;
&lt;li&gt;Data in a database, money in an account, file on the filesystem or any system resource.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Vulnerability

&lt;ul&gt;
&lt;li&gt;A gap in security program that can be exploited by threats to gain unauthorized access to an asset.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Attack

&lt;ul&gt;
&lt;li&gt;An action taken to harm an asset.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Threat

&lt;ul&gt;
&lt;li&gt;Anything that can exploit a vulnerability and obtain, damage, or destroy an asset.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;techniques&#34;&gt;Techniques&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code review

&lt;ul&gt;
&lt;li&gt;Security engineer who understands the application through manually reviewing the source code notices avenues of exploit.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Blackbox security audit

&lt;ul&gt;
&lt;li&gt;This is testing an application for security vulnerabilities not looking at source code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Design review

&lt;ul&gt;
&lt;li&gt;Thinking about possible threat models before writing code or using a spec that has it detailed.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tooling

&lt;ul&gt;
&lt;li&gt;Automated tools that check security vulnerabilities&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;application-threats-or-attacks&#34;&gt;Application threats or attacks&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;Category&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Threats / Attacks&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Input Validation&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Buffer overflow; cross-site scripting; SQL injection; canonicalization&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Software Tampering&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Attacker modifies an existing application&amp;rsquo;s runtime behavior to perform unauthorized actions; exploited via binary patching, code substitution, or code extension&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Authentication&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Network eavesdropping ; Brute force attack; dictionary attacks; cookie replay; credential theft&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Authorization&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Elevation of privilege; disclosure of confidential data; data tampering; luring attacks&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Configuration management&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Unauthorized access to administration interfaces; unauthorized access to configuration stores; retrieval of clear text configuration data; lack of individual accountability; over-privileged process and service accounts&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Sensitive information&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Access sensitive code or data in storage; network eavesdropping; code/data tampering&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Session management&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Session hijacking; session replay; man in the middle&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Cryptography&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Poor key generation or key management; weak or custom encryption&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Parameter manipulation&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Query string manipulation; form field manipulation; cookie manipulation; HTTP header manipulation&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Exception management&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Information disclosure; denial of service&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Auditing and logging&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;User denies performing an operation; attacker exploits an application without trace; attacker covers his or her tracks&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Application_security&#34; target=&#34;_blank&#34;&gt;Application Security&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;owasp&#34;&gt;OWASP&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;The Open Web Application Security Project (OWASP)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;background-on-owasp&#34;&gt;Background on OWASP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mission is to make software security visible, so that individuals/organizations can make informed decisions.&lt;/li&gt;
&lt;li&gt;Operates as a community of security minded professionals&lt;/li&gt;
&lt;li&gt;OWASP issues software tools and knowledge-based documentation on application security.&lt;/li&gt;
&lt;li&gt;The OWASP Foundation came online on December 1st 2001 it was established as a not-for-profit charitable org&lt;/li&gt;
&lt;li&gt;In the United States on April 21, 2004 to ensure the ongoing availability and support for our work at OWASP.&lt;/li&gt;
&lt;li&gt;OWASP is an international organization and the OWASP Foundation supports OWASP efforts around the world.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;owasp-core-values&#34;&gt;OWASP Core Values&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;OPEN Everything at OWASP is radically transparent from our finances to our code.&lt;/li&gt;
&lt;li&gt;INNOVATION OWASP encourages and supports innovation and experiments for solutions to software security challenges.&lt;/li&gt;
&lt;li&gt;GLOBAL Anyone around the world is encouraged to participate in the OWASP community.&lt;/li&gt;
&lt;li&gt;INTEGRITY OWASP is an honest and truthful, vendor neutral, global community.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;owasp-principles&#34;&gt;OWASP Principles&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Free &amp;amp; Open&lt;/li&gt;
&lt;li&gt;Governed by rough consensus &amp;amp; running code&lt;/li&gt;
&lt;li&gt;Abide by a code of ethics (see ethics)&lt;/li&gt;
&lt;li&gt;Not-for-profit&lt;/li&gt;
&lt;li&gt;Not driven by commercial interests&lt;/li&gt;
&lt;li&gt;Risk based approach&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;owasp-mailing-lists&#34;&gt;OWASP Mailing Lists&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://lists.owasp.org/mailman/listinfo&#34; target=&#34;_blank&#34;&gt;Mailing Lists&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;owasp-chapter&#34;&gt;OWASP Chapter&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.owasp.org/index.php/Triangle&#34; target=&#34;_blank&#34;&gt;Triangle OWASP Chapter&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;owasp-membership&#34;&gt;OWASP Membership&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.owasp.org/index.php/Membership&#34; target=&#34;_blank&#34;&gt;OWASP Members&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;owasp-projects&#34;&gt;OWASP Projects&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.owasp.org/index.php/Category:OWASP_Project&#34; target=&#34;_blank&#34;&gt;OWASP Projects&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;owasp-github-organization&#34;&gt;OWASP Github Organization&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/OWASP&#34; target=&#34;_blank&#34;&gt;OWASP Github&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;owasp-member-portal&#34;&gt;OWASP Member Portal&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.owasp.org/index.php/Portal&#34; target=&#34;_blank&#34;&gt;Member Portal&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;owasp-top-10&#34;&gt;OWASP Top 10&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project#tab=OWASP_Top_10_for_2017_Release_Candidate&#34; target=&#34;_blank&#34;&gt;Top 10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will be reviewing the OWASP top 10 list for this workshop&lt;/p&gt;

&lt;p&gt;OWASP Top 10 Most Critical Web Application Security Risks (in the Release Candidate) are:
* Injection
* Broken Authentication and Session Management
* Cross-Site Scripting (XSS)
* Broken Access Control (As it was in 2004)
* Security Misconfiguration
* Sensitive Data Exposure
* Insufficient Attack Protection (NEW)
* Cross-Site Request Forgery (CSRF)
* Using Components with Known Vulnerabilities
* Underprotected APIs (NEW)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/OWASP/Top10/raw/master/2017/OWASP%20Top%2010%20-%202017%20RC1-English.pdf&#34; target=&#34;_blank&#34;&gt;OWASP Top 10 2017 Release Candidate&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;owasp-top-10-comparsion-table-for-2013-vs-2017&#34;&gt;OWASP Top 10 comparsion table for 2013 vs 2017&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;OWASP Top 10 – 2013 (Previous)&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;OWASP Top 10 – 2017 (New)&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A1 - Injection&lt;/td&gt;
&lt;td&gt;A1 - Injection&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A2 - Broken Authentication and Session Management&lt;/td&gt;
&lt;td&gt;A2 - Broken Authentication and Session Management&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A3 - Cross-Site Scripting (XSS)&lt;/td&gt;
&lt;td&gt;A3 - Cross-Site Scripting (XSS)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A4 - Insecure Direct Object References - Merged with A7&lt;/td&gt;
&lt;td&gt;A4 - Broken Access Control (Original category in &lt;sup&gt;2003&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2004&lt;/sub&gt;)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A5 - Security Misconfiguration&lt;/td&gt;
&lt;td&gt;A5 - Security Misconfiguration&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A6 - Sensitive Data Exposure&lt;/td&gt;
&lt;td&gt;A6 - Sensitive Data Exposure&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A7 - Missing Function Level Access Control - Merged with A4&lt;/td&gt;
&lt;td&gt;A7 – Insufficient Attack Protection (NEW)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A8 – Cross-Site Request Forgery (CSRF)&lt;/td&gt;
&lt;td&gt;A8 – Cross-Site Request Forgery (CSRF)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A9 – Using Components with Known Vulnerabilities&lt;/td&gt;
&lt;td&gt;A9 – Using Components with Known Vulnerabilities&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A10 – Unvalidated Redirects and Forwards -Dropped&lt;/td&gt;
&lt;td&gt;A10 – UnderprotectedAPIs (NEW)Release NotesRN&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;Threat Agents&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Attack Vectors&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Weakness Prevalence&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Weakness Detectability&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Technical Impacts&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Business Impacts&lt;/code&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;App Specific&lt;/td&gt;
&lt;td&gt;Easy&lt;/td&gt;
&lt;td&gt;Widespread&lt;/td&gt;
&lt;td&gt;Easy&lt;/td&gt;
&lt;td&gt;Severe&lt;/td&gt;
&lt;td&gt;App/Business Specific&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;App Specific&lt;/td&gt;
&lt;td&gt;Average&lt;/td&gt;
&lt;td&gt;Common&lt;/td&gt;
&lt;td&gt;Average&lt;/td&gt;
&lt;td&gt;Moderate&lt;/td&gt;
&lt;td&gt;App/Business Specific&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;App Specific&lt;/td&gt;
&lt;td&gt;Difficult&lt;/td&gt;
&lt;td&gt;Uncommon&lt;/td&gt;
&lt;td&gt;Difficult&lt;/td&gt;
&lt;td&gt;Minor&lt;/td&gt;
&lt;td&gt;App/Business Specific&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;github-repository&#34;&gt;Github Repository&lt;/h2&gt;

&lt;p&gt;If you like this information then please star this repository on Github at &lt;a href=&#34;https://github.com/jbelmont/software-security&#34; target=&#34;_blank&#34;&gt;Software Security&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
